// <auto-generated />
using System;
using APIDeveloperPortal.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIDeveloperPortal.API.Migrations
{
    [DbContext(typeof(ApideveloperPortalContext))]
    partial class ApideveloperPortalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIDeveloperPortal.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("APIDeveloperPortal.API.Models.ProductService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FunctionName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductServices");
                });

            modelBuilder.Entity("APIDeveloperPortal.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("APIDeveloperPortal.API.Models.UsersProductsBridge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Users_Products_Bridge", (string)null);
                });

            modelBuilder.Entity("APIDeveloperPortal.API.Models.ProductService", b =>
                {
                    b.HasOne("APIDeveloperPortal.API.Models.Product", "Product")
                        .WithMany("ProductServices")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductServices_Products");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("APIDeveloperPortal.API.Models.UsersProductsBridge", b =>
                {
                    b.HasOne("APIDeveloperPortal.API.Models.Product", "Product")
                        .WithMany("UsersProductsBridges")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Users_Products_Bridge_Products");

                    b.HasOne("APIDeveloperPortal.API.Models.User", "User")
                        .WithMany("UsersProductsBridges")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Users_Products_Bridge_Users");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("APIDeveloperPortal.API.Models.Product", b =>
                {
                    b.Navigation("ProductServices");

                    b.Navigation("UsersProductsBridges");
                });

            modelBuilder.Entity("APIDeveloperPortal.API.Models.User", b =>
                {
                    b.Navigation("UsersProductsBridges");
                });
#pragma warning restore 612, 618
        }
    }
}
