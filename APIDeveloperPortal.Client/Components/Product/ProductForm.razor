@using APIDeveloperPortal.Client.Models
@using System.Text.Json.Serialization
@using System.Text
@using APIDeveloperPortal.Client.Models.VMs
@using APIDeveloperPortal.Client.Services
@using System.Net.Http
@inject NavigationManager NavigationManager
@inject IProductService ProductService
@inject IHttpClientFactory ClientFactory

@rendermode @(new InteractiveServerRenderMode(prerender: false))
<h3>ProductForm</h3>
<EditForm Model="product" OnSubmit="eventCallback" FormName="CreateProduct">


    <div>
        <label for="SelectedUserIds">Select Users:</label>
        <InputSelect id="SelectedUserIds" multiple="true" @bind-Value="@product.SelectedUserIds">
            @if (product.AvailableUsers is not null){
            @foreach (var user in product.AvailableUsers)
            {
                <option value="@user.Id">@user.UserName</option>
            }
            }
        </InputSelect>
    </div>
    
    <label for="productName">Product Name:</label>
    <InputText id="productName" type="text" @bind-Value="product.ProductName" />

    <button type="submit">Create</button>
</EditForm>

@code {

    [Parameter]
    public ProductVM? product { get; set; }
    [Parameter]
    public EventCallback eventCallback { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var customClient = ClientFactory.CreateClient();
        product.AvailableUsers = await customClient.GetFromJsonAsync<List<User>>("https://localhost:7056/api/Users");
    }



}
